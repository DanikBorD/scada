#if !defined(AFX_CXOPCCLIENTCOMMUNICATIONSCTRL_H__9DB1CA6F_12DD_4819_8B5D_592AF62A36BD__INCLUDED_)
#define AFX_CXOPCCLIENTCOMMUNICATIONSCTRL_H__9DB1CA6F_12DD_4819_8B5D_592AF62A36BD__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CCXOPCClientCommunicationsCtrl wrapper class

class CCXOPCClientCommunicationsCtrl : public CWnd
{
protected:
	DECLARE_DYNCREATE(CCXOPCClientCommunicationsCtrl)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x883740fd, 0xc519, 0x11d3, { 0x92, 0xdf, 0x0, 0x50, 0x4, 0xb0, 0xa6, 0x36 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	void AboutBox();
	CString GetServerComputerName();
	void SetServerComputerName(LPCTSTR lpszNewValue);
	CString GetServerName();
	void SetServerName(LPCTSTR lpszNewValue);
	CString GetServerProjectName();
	void SetServerProjectName(LPCTSTR lpszNewValue);
	CString GetProjectName();
	void SetProjectName(LPCTSTR lpszNewValue);
	VARIANT GetValue(LPCTSTR Group, LPCTSTR Item);
	void SetValue(LPCTSTR Group, LPCTSTR Item, const VARIANT& newValue);
	void ConnectToServer(BOOL DownloadGroupsAndItems);
	void Disconnect();
	void Help();
	VARIANT Read(LPCTSTR Group, LPCTSTR Item, long Wait);
	void Write(LPCTSTR Group, LPCTSTR Item, const VARIANT& Value, long Wait);
	BOOL GetActive(LPCTSTR Group, LPCTSTR Item);
	void SetActive(LPCTSTR Group, LPCTSTR Item, BOOL bNewValue);
	void GetData(LPCTSTR Group, LPCTSTR Item, long Update);
	void StopData(LPCTSTR Group, LPCTSTR Item);
	BOOL GetDisplayErrors();
	void SetDisplayErrors(BOOL bNewValue);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_CXOPCCLIENTCOMMUNICATIONSCTRL_H__9DB1CA6F_12DD_4819_8B5D_592AF62A36BD__INCLUDED_)
